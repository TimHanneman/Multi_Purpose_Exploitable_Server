import os, sys
import urllib.parse
from datetime import datetime
from subprocess import Popen, PIPE

#Example Header
'''
POST /HTML_files/quiz.html HTTP/1.1
Host: 127.0.0.1:8080
Connection: keep-alive
Content-Length: 29
Cache-Control: max-age=0
sec-ch-ua: " Not A;Brand";v="99", "Chromium";v="90", "Microsoft Edge";v="90"
sec-ch-ua-mobile: ?0
Upgrade-Insecure-Requests: 1
Origin: http://127.0.0.1:8080
Content-Type: application/x-www-form-urlencoded
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/90.0.4430.85 Safari/537.36 Edg/90.0.818.46
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9
Sec-Fetch-Site: same-origin
Sec-Fetch-Mode: navigate
Sec-Fetch-User: ?1
Sec-Fetch-Dest: document
Referer: http://127.0.0.1:8080/HTML_files/quiz.html
Accept-Encoding: gzip, deflate, br
Accept-Language: en-US,en;q=0.9

submit_comments=hello&submit=Submit
['HTML_files', 'quiz.html']'''


class Handle_POST():
    def __init__(self):
        pass
    
    #If we want to make this more advanced, we can add a module that looks at where the post
    # request is coming from to route the information to the correct storage/processing location.
    # For now this should be sufficient for a single page with post capabilities.
    def handle_POST(self, uri, connection, ip, port, data):
        head_n_data = []
        temp = "empty"
        filename = uri.strip("/")
        if (filename == "HTML_files/discussion_page.html"):

            head_n_data = data.split("\n")

            for element in head_n_data:
                print(element)
                if element[0:15] == "submit_comments":
                    temp = element.split("&")
                    comments = temp[0].split("=")
                    comments = urllib.parse.unquote_plus(comments[1])

            with open("HTML_files/comments.html", 'a') as f2:
                    print(comments)
                    f2.write("<br>\n===========================")
                    f2.write(str(datetime.now()))
                    f2.write("===========================<br>")
                    f2.write("\n<br>" + str(comments))
                    f2.close()
        else:
            return 1

class vuln_handle_POST(Handle_POST):
    def handle_POST(self, uri, connection, ip, port, data):
        # os.system(comments)
        print(comments)