#socket class
#precondition
#postcondition
#description

import socket
from _thread import *
import threading

import test_main    #for testing purposes

class sckt_class:
    def __init__(self, host, port):
        self.host = host
        self.port = port

    def sckt(self):
        s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
        s.bind((self.host, self.port))
        print("socket binded to port ", self.port)
        s.listen()          #number of connections allowed can be specified after
        print("socket listening ...")
        c, addr = s.accept()
        print("connected to ", addr)


if __name__ == '__main__':                  #for testing purposes
    temp = sckt_class('127.0.0.1', 8080)
    print(temp)



####################################
#   FOR TESTING PURPOSES    #
# def Socket_Class():       
#     host = ""          #will be taken from the main class
#     port = 8080        #will be taken from the main class

#     s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
#     s.bind((host, port))
#     print("socket binded to port ", port)
#     s.listen()          #number of connections allowed can be specified after
#     print("socket listening ...")
#     # while True:
#     c, addr = s.accept()
#     print("connected to ", addr)
#         # data = c.recv(1024)
#         # if not data:
#         #     print("Bye")
#         #     break

#     s.close()             #won't need it, we want it to remain open

# if __name__ == '__main__':
#     Socket_Class()
######################################
